version: "3.8"

services:
  bot_service:
    build:
      context: .
      dockerfile: docker/bot_service.Dockerfile
    container_name: bot_service
    env_file:
      - bot_service/.env
    volumes:
      - .:/bot_service
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # Для соединения с RabbitMQ
      - "15672:15672"   # Для веб-интерфейса управления
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_VHOST: /task_vhost
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  task_service:
    build:
      context: .
      dockerfile: docker/task_service.Dockerfile
    container_name: task_service
    env_file:
      - task_service/.env
    volumes:
      - .:/task_service
    depends_on:
      rabbitmq:
        condition: service_started  # Ждем пока RabbitMQ начнет запускаться
    command: bash -c "sleep 5 && exec python3 -u -B -m task_service"  # Задержка 5 секунд
    restart: always

volumes:
  rabbitmq_data:



# version: "3.8"

# services:
#   bot_service:
#     build:
#       context: .
#       dockerfile: docker/bot_service.Dockerfile
#     container_name: bot_service
#     env_file:
#       - bot_service/.env
#     volumes:
#       - .:/bot_service
#     # depends_on:
#     #   - mongo
#     #   - rabbitmq
#     restart: no


  # task_scheduler_service:
  #   build: 
  #     context: .
  #     dockerfile: docker/task_scheduler_service.Dockerfile
  #   container_name: task_scheduler_service
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - mongo
  #     - rabbitmq
  #   restart: always

  # notification_service:
  #   build: 
  #     context: .
  #     dockerfile: docker/notification_service.Dockerfile
  #   container_name: notification_service
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - mongo
  #     - rabbitmq
  #   restart: always

#   mongo:
#     image: mongo
#     container_name: mongo_db
#     restart: always
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo_data:/data/db

#   rabbitmq:
#     image: rabbitmq:3-management
#     container_name: rabbitmq
#     restart: always
#     ports:
#       - "5672:5672"
#       - "15672:15672"
#     environment:
#       RABBITMQ_DEFAULT_USER: guest
#       RABBITMQ_DEFAULT_PASS: guest

# volumes:
#   mongo_data:
