version: "3.8"

services:
  bot_service:
    build:
      context: .
      dockerfile: docker/bot_service.Dockerfile
    container_name: bot_service
    env_file:
      - bot_service/.env
    volumes:
      - .:/bot_service
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_VHOST: task_vhost
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  task_service:
    build:
      context: .
      dockerfile: docker/task_service.Dockerfile
    container_name: task_service
    env_file:
      - task_service/.env
    volumes:
      - .:/task_service
    depends_on:
      rabbitmq:
        condition: service_started
    restart: always

  notification_service:
    build:
      context: .
      dockerfile: docker/notification_service.Dockerfile
    container_name: notification_service
    env_file:
      - notification_service/.env
    volumes:
      - .:/notification_service
    depends_on:
      - task_service
    restart: always

volumes:
  rabbitmq_data:
